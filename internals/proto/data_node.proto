syntax = "proto3";

option go_package =  "data_node/";

package data_node;

// Request for downloading a file
message DownloadFileRequest {
    // Name of the file to download
    string fileName = 1;
}

message DownloadFileResponse {
    bool success = 1;
}

message UploadFileRequest {
    string fileName = 1;
    int64  fileSize = 2;
    string port = 4;
    bytes fileContent = 5;
}

message UploadFileResponse {
    bool success = 1;
}

// Response for downloading a file
message FileResponse {
    string fileName = 1;
    int64 fileSize = 2;
    bytes fileContent = 3;    
}

message ReplicaRequest {
    string ip = 1;
    string port = 2;
    string fileName = 3;
    int32 portRandomSeed = 4;
}

message NotifyReplicaResponse {
    bool success = 1;
}

message FileChunk {
    bytes data = 1;
}   

message ReceiveFileForReplicaRequest {
    // string fileName = 1;
    // int64    fileSize = 2;
    string ip = 1;
    string port = 2;
    int32 portRandomSeed = 3;
    // bytes fileContent = 5;
}

message ReceiveFileForReplicaRespone {
    bool success = 1;
}

message AskForFreePortResponse {
    string port = 1;
}

message AskForFreePortRequest {
    
}

service DataNode {
    
    // Receive the file from the client
    rpc UploadFile(UploadFileRequest) returns (UploadFileResponse);

    // Ask for upload port
    rpc AskForFreePort(AskForFreePortRequest) returns (AskForFreePortResponse);

    
    // RPC for downloading a file
    rpc DownloadFile(DownloadFileRequest) returns (DownloadFileResponse);

    //RPC to notify the data node that a file is being replicated
    rpc ReceiveFileForReplica(ReceiveFileForReplicaRequest) returns (ReceiveFileForReplicaRespone);

    // RPC for sending a file to another data node
    rpc ReplicateFile(ReplicaRequest) returns (NotifyReplicaResponse);
}