syntax = "proto3";

option go_package =  "data_node/";

package data_node;

// Request for downloading a file
message FileRequest {
    // Name of the file to download
    string fileName = 1;
}

message UploadFileRequest {
    string fileName = 1;
    int64    fileSize = 2;
    string ip = 3;
    string port = 4;
    bytes fileContent = 5;
}

message UploadFileResponse {
    bool success = 1;
}

// Response for downloading a file
message FileResponse {
    // Content of the file
    // The file size
    string fileName = 1;
    int64 fileSize = 2;
    
}

message ReplicaRequest {
    string ip = 1;
    string port = 2;
    string fileName = 3;
    int32 portRandomSeed = 4;
}

message NotifyReplicaResponse {
    bool success = 1;
}

message FileChunk {
    bytes data = 1;
}   

message ReceiveFileForReplicaRequest {
    // string fileName = 1;
    // int64    fileSize = 2;
    string ip = 1;
    string port = 2;
    int32 portRandomSeed = 3;
    // bytes fileContent = 5;
}

message ReceiveFileForReplicaRespone {
    bool success = 1;
}


service DataNode {
    
    // Receive the file from the client
    rpc UploadFile(UploadFileRequest) returns (UploadFileResponse);



    // RPC for getting the file size
    rpc GetFileSize(FileRequest) returns (FileResponse);
    
    // RPC for downloading a file
    rpc DownloadFile(FileRequest) returns (stream FileChunk);

    //RPC to notify the data node that a file is being replicated
    rpc ReceiveFileForReplica(ReceiveFileForReplicaRequest) returns (ReceiveFileForReplicaRespone);

    // RPC for sending a file to another data node
    rpc ReplicateFile(ReplicaRequest) returns (NotifyReplicaResponse);
}